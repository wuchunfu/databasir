plugins {
    id 'java'
    id 'idea'
    id 'org.springframework.boot' version '2.5.8'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'nu.studer.jooq' version '6.0.1'
}

ext {
    jooqVersion = '3.15.5'
    mysqlConnectorVersion = '8.0.27'
    hikariVersion = '5.0.0'
    jacksonVersion = '2.13.1'
}

dependencies {
    implementation project(":core")
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springframework.boot:spring-boot-starter-jooq'
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'

    implementation "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    implementation "org.jooq:jooq:${jooqVersion}"
    implementation "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    jooqGenerator "mysql:mysql-connector-java:${mysqlConnectorVersion}"
    implementation "com.zaxxer:HikariCP:${hikariVersion}"

}

sourceSets {
    main {
        java.srcDirs += 'generated-src/jooq/main/java'
    }
}

jooq {
    version = "${jooqVersion}"
    edition = nu.studer.gradle.jooq.JooqEdition.OSS

    configurations {
        databasir {
            generateSchemaSourceOnCompilation = true
            generationTool {
                jdbc {
                    driver = 'com.mysql.cj.jdbc.Driver'
                    url = 'jdbc:mysql://localhost:3306/databasir'
                    user = 'root'
                    password = '123456'
                    properties {
                        property {
                            key = 'useSSL'
                            value = 'false'
                        }
                        property {
                            key = 'allowPublicKeyRetrieval'
                            value = 'true'
                        }
                    }
                }
                generator {
                    name = 'org.jooq.codegen.DefaultGenerator'
                    database {
                        name = 'org.jooq.meta.mysql.MySQLDatabase'
                        inputSchema = 'databasir'
                        forcedTypes {
                            forcedType {
                                name = 'BOOLEAN'
                                includeExpression = 'deleted|enabled|is.*'
                                includeTypes = '.*'
                            }
                            forcedType {
                                name = 'varchar'
                                includeExpression = '.*'
                                includeTypes = 'INET'
                            }
                        }
                    }
                    generate {
                        pojos = true
                    }
                    target {
                        packageName = 'com.databasir.web.persist'
                        directory = 'generated-src/jooq/main/java'
                    }
                    strategy.name = 'org.jooq.codegen.DefaultGeneratorStrategy'
                }
            }
        }
    }
}