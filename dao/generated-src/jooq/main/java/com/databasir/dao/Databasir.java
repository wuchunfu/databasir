/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao;


import com.databasir.dao.tables.Connection;
import com.databasir.dao.tables.ConnectionProperty;
import com.databasir.dao.tables.Permission;
import com.databasir.dao.tables.Role;
import com.databasir.dao.tables.RolePermission;
import com.databasir.dao.tables.SchemaMeta;
import com.databasir.dao.tables.SchemaMetaHistory;
import com.databasir.dao.tables.SchemaSource;
import com.databasir.dao.tables.SchemaSourceMetaRule;
import com.databasir.dao.tables.SchemaSourceTag;
import com.databasir.dao.tables.TableColumnMeta;
import com.databasir.dao.tables.TableIndexMeta;
import com.databasir.dao.tables.TableMeta;
import com.databasir.dao.tables.TableTriggerMeta;
import com.databasir.dao.tables.Tag;
import com.databasir.dao.tables.User;
import com.databasir.dao.tables.UserRole;

import java.util.Arrays;
import java.util.List;

import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Databasir extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>databasir</code>
     */
    public static final Databasir DATABASIR = new Databasir();

    /**
     * The table <code>databasir.connection</code>.
     */
    public final Connection CONNECTION = Connection.CONNECTION;

    /**
     * The table <code>databasir.connection_property</code>.
     */
    public final ConnectionProperty CONNECTION_PROPERTY = ConnectionProperty.CONNECTION_PROPERTY;

    /**
     * The table <code>databasir.permission</code>.
     */
    public final Permission PERMISSION = Permission.PERMISSION;

    /**
     * The table <code>databasir.role</code>.
     */
    public final Role ROLE = Role.ROLE;

    /**
     * The table <code>databasir.role_permission</code>.
     */
    public final RolePermission ROLE_PERMISSION = RolePermission.ROLE_PERMISSION;

    /**
     * The table <code>databasir.schema_meta</code>.
     */
    public final SchemaMeta SCHEMA_META = SchemaMeta.SCHEMA_META;

    /**
     * The table <code>databasir.schema_meta_history</code>.
     */
    public final SchemaMetaHistory SCHEMA_META_HISTORY = SchemaMetaHistory.SCHEMA_META_HISTORY;

    /**
     * The table <code>databasir.schema_source</code>.
     */
    public final SchemaSource SCHEMA_SOURCE = SchemaSource.SCHEMA_SOURCE;

    /**
     * The table <code>databasir.schema_source_meta_rule</code>.
     */
    public final SchemaSourceMetaRule SCHEMA_SOURCE_META_RULE = SchemaSourceMetaRule.SCHEMA_SOURCE_META_RULE;

    /**
     * The table <code>databasir.schema_source_tag</code>.
     */
    public final SchemaSourceTag SCHEMA_SOURCE_TAG = SchemaSourceTag.SCHEMA_SOURCE_TAG;

    /**
     * The table <code>databasir.table_column_meta</code>.
     */
    public final TableColumnMeta TABLE_COLUMN_META = TableColumnMeta.TABLE_COLUMN_META;

    /**
     * The table <code>databasir.table_index_meta</code>.
     */
    public final TableIndexMeta TABLE_INDEX_META = TableIndexMeta.TABLE_INDEX_META;

    /**
     * The table <code>databasir.table_meta</code>.
     */
    public final TableMeta TABLE_META = TableMeta.TABLE_META;

    /**
     * The table <code>databasir.table_trigger_meta</code>.
     */
    public final TableTriggerMeta TABLE_TRIGGER_META = TableTriggerMeta.TABLE_TRIGGER_META;

    /**
     * The table <code>databasir.tag</code>.
     */
    public final Tag TAG = Tag.TAG;

    /**
     * The table <code>databasir.user</code>.
     */
    public final User USER = User.USER;

    /**
     * The table <code>databasir.user_role</code>.
     */
    public final UserRole USER_ROLE = UserRole.USER_ROLE;

    /**
     * No further instances allowed
     */
    private Databasir() {
        super("databasir", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Connection.CONNECTION,
            ConnectionProperty.CONNECTION_PROPERTY,
            Permission.PERMISSION,
            Role.ROLE,
            RolePermission.ROLE_PERMISSION,
            SchemaMeta.SCHEMA_META,
            SchemaMetaHistory.SCHEMA_META_HISTORY,
            SchemaSource.SCHEMA_SOURCE,
            SchemaSourceMetaRule.SCHEMA_SOURCE_META_RULE,
            SchemaSourceTag.SCHEMA_SOURCE_TAG,
            TableColumnMeta.TABLE_COLUMN_META,
            TableIndexMeta.TABLE_INDEX_META,
            TableMeta.TABLE_META,
            TableTriggerMeta.TABLE_TRIGGER_META,
            Tag.TAG,
            User.USER,
            UserRole.USER_ROLE
        );
    }
}
