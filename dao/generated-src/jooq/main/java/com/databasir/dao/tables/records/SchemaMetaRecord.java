/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.SchemaMeta;
import com.databasir.dao.tables.pojos.SchemaMetaPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record8;
import org.jooq.Row8;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaMetaRecord extends UpdatableRecordImpl<SchemaMetaRecord> implements Record8<Integer, Integer, String, String, String, Long, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.schema_meta.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.schema_meta.schema_source_id</code>.
     */
    public void setSchemaSourceId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.schema_source_id</code>.
     */
    public Integer getSchemaSourceId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.schema_meta.name</code>.
     */
    public void setName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.name</code>.
     */
    public String getName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.schema_meta.product_name</code>.
     */
    public void setProductName(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.product_name</code>.
     */
    public String getProductName() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.schema_meta.product_version</code>.
     */
    public void setProductVersion(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.product_version</code>.
     */
    public String getProductVersion() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.schema_meta.version</code>.
     */
    public void setVersion(Long value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.version</code>.
     */
    public Long getVersion() {
        return (Long) get(5);
    }

    /**
     * Setter for <code>databasir.schema_meta.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>databasir.schema_meta.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>databasir.schema_meta.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record8 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row8<Integer, Integer, String, String, String, Long, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row8) super.fieldsRow();
    }

    @Override
    public Row8<Integer, Integer, String, String, String, Long, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row8) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SchemaMeta.SCHEMA_META.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SchemaMeta.SCHEMA_META.SCHEMA_SOURCE_ID;
    }

    @Override
    public Field<String> field3() {
        return SchemaMeta.SCHEMA_META.NAME;
    }

    @Override
    public Field<String> field4() {
        return SchemaMeta.SCHEMA_META.PRODUCT_NAME;
    }

    @Override
    public Field<String> field5() {
        return SchemaMeta.SCHEMA_META.PRODUCT_VERSION;
    }

    @Override
    public Field<Long> field6() {
        return SchemaMeta.SCHEMA_META.VERSION;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SchemaMeta.SCHEMA_META.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field8() {
        return SchemaMeta.SCHEMA_META.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getSchemaSourceId();
    }

    @Override
    public String component3() {
        return getName();
    }

    @Override
    public String component4() {
        return getProductName();
    }

    @Override
    public String component5() {
        return getProductVersion();
    }

    @Override
    public Long component6() {
        return getVersion();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component8() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getSchemaSourceId();
    }

    @Override
    public String value3() {
        return getName();
    }

    @Override
    public String value4() {
        return getProductName();
    }

    @Override
    public String value5() {
        return getProductVersion();
    }

    @Override
    public Long value6() {
        return getVersion();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value8() {
        return getCreateAt();
    }

    @Override
    public SchemaMetaRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value2(Integer value) {
        setSchemaSourceId(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value3(String value) {
        setName(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value4(String value) {
        setProductName(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value5(String value) {
        setProductVersion(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value6(Long value) {
        setVersion(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value7(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public SchemaMetaRecord value8(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public SchemaMetaRecord values(Integer value1, Integer value2, String value3, String value4, String value5, Long value6, LocalDateTime value7, LocalDateTime value8) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaMetaRecord
     */
    public SchemaMetaRecord() {
        super(SchemaMeta.SCHEMA_META);
    }

    /**
     * Create a detached, initialised SchemaMetaRecord
     */
    public SchemaMetaRecord(Integer id, Integer schemaSourceId, String name, String productName, String productVersion, Long version, LocalDateTime updateAt, LocalDateTime createAt) {
        super(SchemaMeta.SCHEMA_META);

        setId(id);
        setSchemaSourceId(schemaSourceId);
        setName(name);
        setProductName(productName);
        setProductVersion(productVersion);
        setVersion(version);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised SchemaMetaRecord
     */
    public SchemaMetaRecord(SchemaMetaPojo value) {
        super(SchemaMeta.SCHEMA_META);

        if (value != null) {
            setId(value.getId());
            setSchemaSourceId(value.getSchemaSourceId());
            setName(value.getName());
            setProductName(value.getProductName());
            setProductVersion(value.getProductVersion());
            setVersion(value.getVersion());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
