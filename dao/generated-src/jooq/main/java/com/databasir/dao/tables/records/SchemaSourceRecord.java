/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.SchemaSource;
import com.databasir.dao.tables.pojos.SchemaSourcePojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaSourceRecord extends UpdatableRecordImpl<SchemaSourceRecord> implements Record7<Integer, String, String, String, String, Boolean, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.schema_source.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.schema_source.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.schema_source.title</code>.
     */
    public void setTitle(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.schema_source.title</code>.
     */
    public String getTitle() {
        return (String) get(1);
    }

    /**
     * Setter for <code>databasir.schema_source.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.schema_source.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.schema_source.database_type</code>.
     */
    public void setDatabaseType(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.schema_source.database_type</code>.
     */
    public String getDatabaseType() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.schema_source.schema_name</code>.
     */
    public void setSchemaName(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.schema_source.schema_name</code>.
     */
    public String getSchemaName() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.schema_source.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.schema_source.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(5);
    }

    /**
     * Setter for <code>databasir.schema_source.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.schema_source.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, String, String, String, String, Boolean, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, String, String, String, String, Boolean, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SchemaSource.SCHEMA_SOURCE.ID;
    }

    @Override
    public Field<String> field2() {
        return SchemaSource.SCHEMA_SOURCE.TITLE;
    }

    @Override
    public Field<String> field3() {
        return SchemaSource.SCHEMA_SOURCE.DESCRIPTION;
    }

    @Override
    public Field<String> field4() {
        return SchemaSource.SCHEMA_SOURCE.DATABASE_TYPE;
    }

    @Override
    public Field<String> field5() {
        return SchemaSource.SCHEMA_SOURCE.SCHEMA_NAME;
    }

    @Override
    public Field<Boolean> field6() {
        return SchemaSource.SCHEMA_SOURCE.DELETED;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return SchemaSource.SCHEMA_SOURCE.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getTitle();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public String component4() {
        return getDatabaseType();
    }

    @Override
    public String component5() {
        return getSchemaName();
    }

    @Override
    public Boolean component6() {
        return getDeleted();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getTitle();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public String value4() {
        return getDatabaseType();
    }

    @Override
    public String value5() {
        return getSchemaName();
    }

    @Override
    public Boolean value6() {
        return getDeleted();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateAt();
    }

    @Override
    public SchemaSourceRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value2(String value) {
        setTitle(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value4(String value) {
        setDatabaseType(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value5(String value) {
        setSchemaName(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value6(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public SchemaSourceRecord value7(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public SchemaSourceRecord values(Integer value1, String value2, String value3, String value4, String value5, Boolean value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaSourceRecord
     */
    public SchemaSourceRecord() {
        super(SchemaSource.SCHEMA_SOURCE);
    }

    /**
     * Create a detached, initialised SchemaSourceRecord
     */
    public SchemaSourceRecord(Integer id, String title, String description, String databaseType, String schemaName, Boolean deleted, LocalDateTime createAt) {
        super(SchemaSource.SCHEMA_SOURCE);

        setId(id);
        setTitle(title);
        setDescription(description);
        setDatabaseType(databaseType);
        setSchemaName(schemaName);
        setDeleted(deleted);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised SchemaSourceRecord
     */
    public SchemaSourceRecord(SchemaSourcePojo value) {
        super(SchemaSource.SCHEMA_SOURCE);

        if (value != null) {
            setId(value.getId());
            setTitle(value.getTitle());
            setDescription(value.getDescription());
            setDatabaseType(value.getDatabaseType());
            setSchemaName(value.getSchemaName());
            setDeleted(value.getDeleted());
            setCreateAt(value.getCreateAt());
        }
    }
}
