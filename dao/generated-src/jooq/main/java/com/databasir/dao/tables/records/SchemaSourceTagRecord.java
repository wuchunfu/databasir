/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.SchemaSourceTag;
import com.databasir.dao.tables.pojos.SchemaSourceTagPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record4;
import org.jooq.Row4;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SchemaSourceTagRecord extends UpdatableRecordImpl<SchemaSourceTagRecord> implements Record4<Integer, Integer, Integer, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.schema_source_tag.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.schema_source_tag.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.schema_source_tag.schema_source_id</code>.
     */
    public void setSchemaSourceId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.schema_source_tag.schema_source_id</code>.
     */
    public Integer getSchemaSourceId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.schema_source_tag.tag_id</code>.
     */
    public void setTagId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.schema_source_tag.tag_id</code>.
     */
    public Integer getTagId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>databasir.schema_source_tag.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.schema_source_tag.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(3);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record4 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row4<Integer, Integer, Integer, LocalDateTime> fieldsRow() {
        return (Row4) super.fieldsRow();
    }

    @Override
    public Row4<Integer, Integer, Integer, LocalDateTime> valuesRow() {
        return (Row4) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return SchemaSourceTag.SCHEMA_SOURCE_TAG.ID;
    }

    @Override
    public Field<Integer> field2() {
        return SchemaSourceTag.SCHEMA_SOURCE_TAG.SCHEMA_SOURCE_ID;
    }

    @Override
    public Field<Integer> field3() {
        return SchemaSourceTag.SCHEMA_SOURCE_TAG.TAG_ID;
    }

    @Override
    public Field<LocalDateTime> field4() {
        return SchemaSourceTag.SCHEMA_SOURCE_TAG.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getSchemaSourceId();
    }

    @Override
    public Integer component3() {
        return getTagId();
    }

    @Override
    public LocalDateTime component4() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getSchemaSourceId();
    }

    @Override
    public Integer value3() {
        return getTagId();
    }

    @Override
    public LocalDateTime value4() {
        return getCreateAt();
    }

    @Override
    public SchemaSourceTagRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public SchemaSourceTagRecord value2(Integer value) {
        setSchemaSourceId(value);
        return this;
    }

    @Override
    public SchemaSourceTagRecord value3(Integer value) {
        setTagId(value);
        return this;
    }

    @Override
    public SchemaSourceTagRecord value4(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public SchemaSourceTagRecord values(Integer value1, Integer value2, Integer value3, LocalDateTime value4) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SchemaSourceTagRecord
     */
    public SchemaSourceTagRecord() {
        super(SchemaSourceTag.SCHEMA_SOURCE_TAG);
    }

    /**
     * Create a detached, initialised SchemaSourceTagRecord
     */
    public SchemaSourceTagRecord(Integer id, Integer schemaSourceId, Integer tagId, LocalDateTime createAt) {
        super(SchemaSourceTag.SCHEMA_SOURCE_TAG);

        setId(id);
        setSchemaSourceId(schemaSourceId);
        setTagId(tagId);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised SchemaSourceTagRecord
     */
    public SchemaSourceTagRecord(SchemaSourceTagPojo value) {
        super(SchemaSourceTag.SCHEMA_SOURCE_TAG);

        if (value != null) {
            setId(value.getId());
            setSchemaSourceId(value.getSchemaSourceId());
            setTagId(value.getTagId());
            setCreateAt(value.getCreateAt());
        }
    }
}
