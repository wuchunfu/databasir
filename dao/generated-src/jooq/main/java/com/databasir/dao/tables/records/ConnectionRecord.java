/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.Connection;
import com.databasir.dao.tables.pojos.ConnectionPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectionRecord extends UpdatableRecordImpl<ConnectionRecord> implements Record7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.connection.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.connection.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.connection.schema_source_id</code>.
     */
    public void setSchemaSourceId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.connection.schema_source_id</code>.
     */
    public Integer getSchemaSourceId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.connection.url</code>.
     */
    public void setUrl(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.connection.url</code>.
     */
    public String getUrl() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.connection.username</code>.
     */
    public void setUsername(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.connection.username</code>.
     */
    public String getUsername() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.connection.password</code>.
     */
    public void setPassword(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.connection.password</code>.
     */
    public String getPassword() {
        return (String) get(4);
    }

    /**
     * Setter for <code>databasir.connection.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.connection.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>databasir.connection.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>databasir.connection.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, String, String, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Connection.CONNECTION.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Connection.CONNECTION.SCHEMA_SOURCE_ID;
    }

    @Override
    public Field<String> field3() {
        return Connection.CONNECTION.URL;
    }

    @Override
    public Field<String> field4() {
        return Connection.CONNECTION.USERNAME;
    }

    @Override
    public Field<String> field5() {
        return Connection.CONNECTION.PASSWORD;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Connection.CONNECTION.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Connection.CONNECTION.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getSchemaSourceId();
    }

    @Override
    public String component3() {
        return getUrl();
    }

    @Override
    public String component4() {
        return getUsername();
    }

    @Override
    public String component5() {
        return getPassword();
    }

    @Override
    public LocalDateTime component6() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component7() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getSchemaSourceId();
    }

    @Override
    public String value3() {
        return getUrl();
    }

    @Override
    public String value4() {
        return getUsername();
    }

    @Override
    public String value5() {
        return getPassword();
    }

    @Override
    public LocalDateTime value6() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value7() {
        return getCreateAt();
    }

    @Override
    public ConnectionRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConnectionRecord value2(Integer value) {
        setSchemaSourceId(value);
        return this;
    }

    @Override
    public ConnectionRecord value3(String value) {
        setUrl(value);
        return this;
    }

    @Override
    public ConnectionRecord value4(String value) {
        setUsername(value);
        return this;
    }

    @Override
    public ConnectionRecord value5(String value) {
        setPassword(value);
        return this;
    }

    @Override
    public ConnectionRecord value6(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public ConnectionRecord value7(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public ConnectionRecord values(Integer value1, Integer value2, String value3, String value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConnectionRecord
     */
    public ConnectionRecord() {
        super(Connection.CONNECTION);
    }

    /**
     * Create a detached, initialised ConnectionRecord
     */
    public ConnectionRecord(Integer id, Integer schemaSourceId, String url, String username, String password, LocalDateTime updateAt, LocalDateTime createAt) {
        super(Connection.CONNECTION);

        setId(id);
        setSchemaSourceId(schemaSourceId);
        setUrl(url);
        setUsername(username);
        setPassword(password);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised ConnectionRecord
     */
    public ConnectionRecord(ConnectionPojo value) {
        super(Connection.CONNECTION);

        if (value != null) {
            setId(value.getId());
            setSchemaSourceId(value.getSchemaSourceId());
            setUrl(value.getUrl());
            setUsername(value.getUsername());
            setPassword(value.getPassword());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
