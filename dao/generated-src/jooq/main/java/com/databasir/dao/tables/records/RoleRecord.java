/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.Role;
import com.databasir.dao.tables.pojos.RolePojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RoleRecord extends UpdatableRecordImpl<RoleRecord> implements Record6<Integer, String, Boolean, Boolean, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.role.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.role.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.role.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.role.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>databasir.role.is_basic</code>.
     */
    public void setIsBasic(Boolean value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.role.is_basic</code>.
     */
    public Boolean getIsBasic() {
        return (Boolean) get(2);
    }

    /**
     * Setter for <code>databasir.role.deleted</code>.
     */
    public void setDeleted(Boolean value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.role.deleted</code>.
     */
    public Boolean getDeleted() {
        return (Boolean) get(3);
    }

    /**
     * Setter for <code>databasir.role.update_at</code>.
     */
    public void setUpdateAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.role.update_at</code>.
     */
    public LocalDateTime getUpdateAt() {
        return (LocalDateTime) get(4);
    }

    /**
     * Setter for <code>databasir.role.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>databasir.role.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, String, Boolean, Boolean, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, String, Boolean, Boolean, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Role.ROLE.ID;
    }

    @Override
    public Field<String> field2() {
        return Role.ROLE.NAME;
    }

    @Override
    public Field<Boolean> field3() {
        return Role.ROLE.IS_BASIC;
    }

    @Override
    public Field<Boolean> field4() {
        return Role.ROLE.DELETED;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return Role.ROLE.UPDATE_AT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Role.ROLE.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public Boolean component3() {
        return getIsBasic();
    }

    @Override
    public Boolean component4() {
        return getDeleted();
    }

    @Override
    public LocalDateTime component5() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public Boolean value3() {
        return getIsBasic();
    }

    @Override
    public Boolean value4() {
        return getDeleted();
    }

    @Override
    public LocalDateTime value5() {
        return getUpdateAt();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateAt();
    }

    @Override
    public RoleRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public RoleRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public RoleRecord value3(Boolean value) {
        setIsBasic(value);
        return this;
    }

    @Override
    public RoleRecord value4(Boolean value) {
        setDeleted(value);
        return this;
    }

    @Override
    public RoleRecord value5(LocalDateTime value) {
        setUpdateAt(value);
        return this;
    }

    @Override
    public RoleRecord value6(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public RoleRecord values(Integer value1, String value2, Boolean value3, Boolean value4, LocalDateTime value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RoleRecord
     */
    public RoleRecord() {
        super(Role.ROLE);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(Integer id, String name, Boolean isBasic, Boolean deleted, LocalDateTime updateAt, LocalDateTime createAt) {
        super(Role.ROLE);

        setId(id);
        setName(name);
        setIsBasic(isBasic);
        setDeleted(deleted);
        setUpdateAt(updateAt);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised RoleRecord
     */
    public RoleRecord(RolePojo value) {
        super(Role.ROLE);

        if (value != null) {
            setId(value.getId());
            setName(value.getName());
            setIsBasic(value.getIsBasic());
            setDeleted(value.getDeleted());
            setUpdateAt(value.getUpdateAt());
            setCreateAt(value.getCreateAt());
        }
    }
}
