/*
 * This file is generated by jOOQ.
 */
package com.databasir.dao.tables.records;


import com.databasir.dao.tables.ConnectionProperty;
import com.databasir.dao.tables.pojos.ConnectionPropertyPojo;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ConnectionPropertyRecord extends UpdatableRecordImpl<ConnectionPropertyRecord> implements Record5<Integer, Integer, String, String, LocalDateTime> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>databasir.connection_property.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>databasir.connection_property.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>databasir.connection_property.connection_id</code>.
     */
    public void setConnectionId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>databasir.connection_property.connection_id</code>.
     */
    public Integer getConnectionId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>databasir.connection_property.key</code>.
     */
    public void setKey(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>databasir.connection_property.key</code>.
     */
    public String getKey() {
        return (String) get(2);
    }

    /**
     * Setter for <code>databasir.connection_property.value</code>.
     */
    public void setValue(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>databasir.connection_property.value</code>.
     */
    public String getValue() {
        return (String) get(3);
    }

    /**
     * Setter for <code>databasir.connection_property.create_at</code>.
     */
    public void setCreateAt(LocalDateTime value) {
        set(4, value);
    }

    /**
     * Getter for <code>databasir.connection_property.create_at</code>.
     */
    public LocalDateTime getCreateAt() {
        return (LocalDateTime) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, String, LocalDateTime> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, String, LocalDateTime> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return ConnectionProperty.CONNECTION_PROPERTY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return ConnectionProperty.CONNECTION_PROPERTY.CONNECTION_ID;
    }

    @Override
    public Field<String> field3() {
        return ConnectionProperty.CONNECTION_PROPERTY.KEY;
    }

    @Override
    public Field<String> field4() {
        return ConnectionProperty.CONNECTION_PROPERTY.VALUE;
    }

    @Override
    public Field<LocalDateTime> field5() {
        return ConnectionProperty.CONNECTION_PROPERTY.CREATE_AT;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getConnectionId();
    }

    @Override
    public String component3() {
        return getKey();
    }

    @Override
    public String component4() {
        return getValue();
    }

    @Override
    public LocalDateTime component5() {
        return getCreateAt();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getConnectionId();
    }

    @Override
    public String value3() {
        return getKey();
    }

    @Override
    public String value4() {
        return getValue();
    }

    @Override
    public LocalDateTime value5() {
        return getCreateAt();
    }

    @Override
    public ConnectionPropertyRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public ConnectionPropertyRecord value2(Integer value) {
        setConnectionId(value);
        return this;
    }

    @Override
    public ConnectionPropertyRecord value3(String value) {
        setKey(value);
        return this;
    }

    @Override
    public ConnectionPropertyRecord value4(String value) {
        setValue(value);
        return this;
    }

    @Override
    public ConnectionPropertyRecord value5(LocalDateTime value) {
        setCreateAt(value);
        return this;
    }

    @Override
    public ConnectionPropertyRecord values(Integer value1, Integer value2, String value3, String value4, LocalDateTime value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ConnectionPropertyRecord
     */
    public ConnectionPropertyRecord() {
        super(ConnectionProperty.CONNECTION_PROPERTY);
    }

    /**
     * Create a detached, initialised ConnectionPropertyRecord
     */
    public ConnectionPropertyRecord(Integer id, Integer connectionId, String key, String value, LocalDateTime createAt) {
        super(ConnectionProperty.CONNECTION_PROPERTY);

        setId(id);
        setConnectionId(connectionId);
        setKey(key);
        setValue(value);
        setCreateAt(createAt);
    }

    /**
     * Create a detached, initialised ConnectionPropertyRecord
     */
    public ConnectionPropertyRecord(ConnectionPropertyPojo value) {
        super(ConnectionProperty.CONNECTION_PROPERTY);

        if (value != null) {
            setId(value.getId());
            setConnectionId(value.getConnectionId());
            setKey(value.getKey());
            setValue(value.getValue());
            setCreateAt(value.getCreateAt());
        }
    }
}
